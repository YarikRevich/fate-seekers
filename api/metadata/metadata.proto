syntax = "proto3";
option go_package = "github.com/YarikRevich/fate-seekers/pkg/core/networking/metadata/api";

import "google/protobuf/timestamp.proto";

package metadata;

// Represents service used to retrieve user content related data.
// All the metadata requests require authentication header to be provided, having JWT token saved in it.
service Metadata {
    // PingConnection performs ping connection and creates user record on the server side at the same time, 
    // if such does not exist.
    rpc PingConnection(PingConnectionRequest) returns (PingConnectionResponse) {};

    // GetSessions performs existing sessions retrieval operation by the configured user.
    rpc GetSessions(GetSessionsRequest) returns (GetSessionsResponse) {};

    // CreateSession performs session creation operation by the configured user.
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {};

    // RemoveSession performs session removal operation by the configured user. Allowed only for session owner.
    rpc RemoveSession(RemoveSessionRequest) returns (RemoveSessionResponse) {};

    // JoinToSession performs session join request by the configured user.
    rpc JoinToSession(JoinToSessionRequest) returns (JoinToSessionResponse) {};

    // GetChest performs chests retrieval for the selected session by the configured user.
    rpc GetChests(GetChestsRequest) returns (GetChestsResponse) {};

    // GetMap performs map retrieval for the selected session by the configured user.
    rpc GetMap(GetMapRequest) returns (stream GetMapResponse) {};
    
    // GetChat performs chat retrieval for the selected session by the configured user.
    rpc GetChat(GetChatRequest) returns (stream GetChatResponse) {};

    // CreateChatMessage performs chat message creation for the selected session by the configured user.
    rpc CreateChatMessage(CreateChatMessageRequest) returns (CreateChatMessageResponse) {};
}

// PingConnectionRequest represents  ping connection request message.
message PingConnectionRequest {
    string issuer = 1;
};

// PingConnectionResponse represents ping connection response message.
message PingConnectionResponse {
};

// GetSessionsRequest represents get sesssions request.
message GetSessionsRequest {
    string issuer = 1;
};

// Session represents common session retrieval message.
message Session {
    string session_id = 1; 
    string name = 2;
}

// GetSessionsResponse represents get sesssions response.
message GetSessionsResponse {
    repeated Session sessions = 1;
};

// CreateSessionRequest represents create session request.
// User is allowed to create only 3 sessions in 10 minutes.
message CreateSessionRequest {
    string name = 1;
    string issuer = 2;
    optional int64 seed = 3;
};

// CreateSessionResponse represents create session response.
message CreateSessionResponse {
    string session_id = 1;
};

// RemoveSessionRequest represents remove session request.
message RemoveSessionRequest {
    string session_id = 1;
};

// RemoveSessionResponse represents remove session response.
message RemoveSessionResponse {
};

// JoinToSessionRequest represents user join to session request.
message JoinToSessionRequest {
    string session_id = 1;
    string issuer = 2;
};

// JoinToSessionResponse represents user join to session response.
message JoinToSessionResponse {
};

// GetChestsRequest represents chests retrieval request message.
message GetChestsRequest {
    string session_id = 1;
};

// Position represents common position message.
message Position {
    int64 x = 1;
    int64 y = 2;
};

// GetChestsResponse represents chests retrieval response streaming message.
message GetChestsResponse {
    repeated Position positions = 1;
};

// GetMapRequest represents map retrieval request message.
message GetMapRequest {
    string session_id = 1;
};

// GetMapResponse represents map retrieval response streaming message.
message GetMapResponse {
    repeated Position positions = 1;
};

// GetChatRequest represents chat retrieval request message.
message GetChatRequest {
    string session_id = 1;
    int64 offset = 2;
};

// ChatMessage represents common chat retrieval message.
message ChatMessage {
    string content = 1;
    string issuer = 2;
    google.protobuf.Timestamp timestamp = 3;
};

// GetChatResponse represents chat retrieval response streaming message.
message GetChatResponse {
    repeated string messages = 1;
};

// CreateChatMessageRequest represents chat message creation request message.
message CreateChatMessageRequest {
    string session_id = 1;
    int64 offset = 2;
};

// CreateChatMessageResponse represents chat message creation request message.
message CreateChatMessageResponse {
};